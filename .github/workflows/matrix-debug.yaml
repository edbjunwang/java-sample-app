name: Matrix-debug

on:
  push:
    branches: [ jw/matrix ]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

  matrix-job:
    runs-on: ubuntu-latest
    needs: prepare

    strategy:
      matrix:
        distro: [ el ]
        distro-version: [ 7, 8, 9 ]
        arch: [ amd64, ppc64le, s390x ]
        include:
          - distro: debian
            distro-version: 10
            arch: amd64
          - distro: debian
            distro-version: 11
            arch: amd64
          - distro: sles
            distro-version: 12sp5
            arch: amd64
          - distro: sles
            distro-version: 12sp5
            arch: ppc64le 
          - distro: sles
            distro-version: 12sp5
            arch: s390x 
          - distro: windows
            distro-version: 2019
            arch: x64
        exclude:
          - distro: el
            distro-version: 7
            arch: ppc64le

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set Python version
        shell: bash
        run: |
          if [[ "${{ matrix.name }}" == "windows-x64" ]] ; then
            echo "DIST=windows" >> $GITHUB_ENV
            echo "ARCH=x64" >> $GITHUB_ENV
          else
            echo "DIST=${{ matrix.distro}}-${{ matrix.distro-version}}" >> $GITHUB_ENV
            echo "ARCH=${{ matrix.architecture }}" >> $GITHUB_ENV
          fi

          if [[ "$DIST" == "sles-12sp5" ]] || [[ "$DIST" == "el-7" ]] || [[ "$DIST" == "el-9" ]] ; then
            echo "PYTHON_VERSION=3.9" >> $GITHUB_ENV
          else
            echo "PYTHON_VERSION=3.10" >> $GITHUB_ENV
          fi

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Install Python dependencies
        shell: bash
        run: |
          sudo apt-get install libkrb5-dev
          pip install -r requirements.txt
          pip freeze | tee -a requirements.${{ matrix.distro }}-${{ matrix.distro-version }}-${{ matrix.arch }}


      - name: Upload  file
        uses: actions/upload-artifact@v4
        with:
          name: requirements.${{ matrix.distro }}-${{ matrix.distro-version }}-${{ matrix.arch }}
          path: requirements.${{ matrix.distro }}-${{ matrix.distro-version }}-${{ matrix.arch }}

  collect:
    runs-on: ubuntu-latest
    needs: matrix-job

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Download files
        uses: actions/download-artifact@v4
        with:
          path: python-dependency

      - name: check download artifacts
        shell: bash
        run: |
          pwd
          ls -al
          ls -altr python-dependency
          md5sum python-dependency/*

