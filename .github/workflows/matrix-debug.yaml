name: Matrix-debug

on:
  push:
    branches: [ jw/matrix ]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

  matrix-job:
    runs-on: ubuntu-latest
    needs: prepare

    strategy:
      matrix:
        distro: [ el ]
        distro-version: [ 7, 8, 9 ]
        arch: [ amd64, ppc64le, s390x ]
        include:
          - distro: debian
            distro-version: 10
            arch: amd64
          - distro: debian
            distro-version: 11
            arch: amd64
          - distro: sles
            distro-version: 12sp5
            arch: amd64
          - distro: sles
            distro-version: 12sp5
            arch: ppc64le 
          - distro: sles
            distro-version: 12sp5
            arch: s390x 
          - distro: windows
            distro-version: 2019
            arch: x64
        exclude:
          - distro: el
            distro-version: 7
            arch: ppc64le

    steps:
      - name: Display matrix value
        shell: bash
        run: |
          echo "distro: ${{ matrix.distro }}"
          echo "distro-version: ${{ matrix.distro-version }}"
          echo "arch : ${{ matrix.arch }}"
          touch ${{ matrix.distro }}-${{ matrix.distro-version }}-${{ matrix.arch }}.txt

      - name: Upload  file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.distro }}-${{ matrix.distro-version }}-${{ matrix.arch }}.txt
          path: ${{ matrix.distro }}-${{ matrix.distro-version }}-${{ matrix.arch }}.txt

  collect:
    runs-on: ubuntu-latest
    needs: matrix-job

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3

      - name: Download files
        uses: actions/download-artifact@v4
        with:
          path: python-dependency

      - name: check download artifacts
        shell: bash
        run: |
          pwd
          ls -al
          ls -altr *.txt

